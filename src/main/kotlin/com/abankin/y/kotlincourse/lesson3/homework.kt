package com.abankin.y.kotlincourse.lesson3

//Погрузимся в атмосферу "Hackathon Survival": Марафон, где участники пытаются завершить реальный проект в условиях искусственно созданного хаоса (например, часто меняющиеся требования, неожиданные "сбои" в оборудовании)
//Для каждого из полей подбери наилучший способ хранения из известных тебе. Учитывай такие факторы, как изменяемость, обязательность, возможность начальной установки, ресурсоёмкие вычисления значения, необходимость проверки устанавливаемого значения на валидность или запрет доступа на установку при возможности чтения, публичность и приватность данных.
//Название мероприятия
val event_name: String = "Event Name"
//Дата проведения
var event_date: String = "2024-09-12 10:00"
//Место проведения
var event_location: String = "Earth"
//Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.
var budget: String = "budget.xlsx"
//Количество участников
var participants: Int = 123
//План эвакуации
val evacuation_map: String = "map.png"
//Список доступного оборудования
var equipment =  listOf("PC","Notebook","Tablet","Smartphone")
//Список свободного оборудования
var free_equipment = listOf("PC_free","Notebook_free","Tablet_free","Smartphone_free")
//График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
lateinit var food_plan: String
//План мероприятий на случай сбоев
var emergency_plan: String = "emergency_plan.docx"
//Список экспертов и жюри
var experts = listOf("Exp1","Exp2","Exp3")
//Методы и процедуры для сбора отзывов от участников и гостей, включая анонимные опросы и интервью.
var feedback_methods = listOf("Method_1","Method 2")
//Политика конфиденциальности
val private_policy: String = "Text of policy"
//Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
//Текущая температура в помещении
val maxtemp: Double = 25.0
//Мониторинг и анализ производительности сетевого оборудования и интернет-соединения.
//Уровень освещения
//Лог событий мероприятия
//Доступность медицинской помощи
//Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
//Регистрационный номер мероприятия
val RegID: Int = 1
//Максимально допустимый уровень шума в помещении хакатона.
//Индикатор превышения уровня шума в помещениях
//Формат мероприятия (зависит от геополитической обстановки)
//Количество свободных мест для отдыха (например, кресел или диванов), сеттер валидирует, чтобы количество не было меньше нуля.
//План взаимодействия с прессой
//Детальная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
//Статус получения всех необходимых разрешений
//Указывает, открыт ли доступ к эксклюзивным ресурсам (например, специальному оборудованию)
//Список партнеров мероприятия
//Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
lateinit var report: String
//План распределения призов
//Контактная информация экстренных служб, медицинского персонала и других важных служб, недоступная участникам.
//Особые условия для участников с ограниченными возможностями
//Общее настроение участников (определяется опросами)
//Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия.
var hackathon_plan = listOf("10:00 Начало","15:00 Середина", "18:00 Конец")
//Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия.
lateinit var specialguest: String
//Максимальное количество людей, которое может вместить место проведения.
const val maxparticipants: Int = 132
//Стандартное количество часов, отведенное каждой команде для работы над проектом.
val worktime: Int = 5
//Текущая температура в помещении
var temperature: Double = 24.4
